{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","messageType","Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","deletePerson","map","person","name","number","onClick","App","useState","setPersons","personsToShow","setPersonsToShow","setNewName","setNewNumber","setFilter","notification","setNotification","useEffect","personService","initialPersons","event","filter","target","filteredPersons","toLowerCase","includes","preventDefault","some","p","window","confirm","find","updatedPerson","returnedPerson","setTimeout","catch","error","concat","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55119125.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst delRequest = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, delRequest }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({message}) => {\n  if (message.message === null) {\n    return null\n  } \n  return (\n    <div className={message.messageType}>\n      {message.message}\n    </div>\n  )\n}\n\nconst Filter = ({newFilter, handleFilterChange}) => {\n  return (\n    <div>\n      filter shown with <input value={newFilter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({persons, deletePerson}) => {\n  return (\n    <div>\n      {persons.map((person) => \n        <div key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => deletePerson(person.id)}>delete</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [personsToShow, setPersonsToShow] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setFilter] = useState('')\n  const [notification, setNotification] = useState({message: null, messageType: ''}) \n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setPersonsToShow(initialPersons)\n      })\n  }, [])\n\n  const handleFilterChange = (event) => {\n    const filter = event.target.value // newFilter isn't updated right away (async)\n    const filteredPersons = persons.filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\n    setFilter(filter)\n    setPersonsToShow(filteredPersons)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.some(p => p.name === newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        const updatedPerson = { ...person, number: newNumber }\n        personService\n          .update(person.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n            setPersonsToShow(persons.map(p => p.id !== person.id ? p : returnedPerson))\n            setNotification({message: `Updated ${person.name}`, messageType: 'success'})\n            setTimeout(() => {\n              setNotification({message: null, messageType: ''})\n            }, 3000)\n            setNewName('')\n            setNewNumber('')\n            setFilter('')\n          })\n          .catch(error => {\n            setNotification({\n              message: error.response.data.error,\n              messageType: 'error'\n            })\n            setTimeout(() => {\n              setNotification({message: null, messageType: ''})\n            }, 3000)\n          })\n        }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setPersonsToShow(persons.concat(returnedPerson))\n          setNotification({message: `Added ${newName}`, messageType: 'success'})\n          setTimeout(() => {\n            setNotification({message: null, messageType: ''})\n          }, 3000)\n          setNewName('')\n          setNewNumber('')\n          setFilter('')\n        })\n        .catch(error => {\n          setNotification({\n            message: error.response.data.error,\n            messageType: 'error'\n          })\n          setTimeout(() => {\n            setNotification({message: null, messageType: ''})\n          }, 3000)\n        })\n      } \n    }\n  \n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${person.name}?`)){\n      personService\n        .delRequest(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id)) \n          setPersonsToShow(persons.filter(p => p.id !== id)) \n          setNotification({message: `Deleted ${person.name}`, messageType: 'success'})\n          setTimeout(() => {\n            setNotification({message: null, messageType: ''})\n          }, 3000)\n          setNewName('')\n          setNewNumber('')\n          setFilter('')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setPersons(persons.filter(p => p.id !== id)) \n          setPersonsToShow(persons.filter(p => p.id !== id)) \n          setNotification({\n            message: error.response.data.error,\n            messageType: 'error'\n          })\n          setTimeout(() => {\n            setNotification({message: null, messageType: ''})\n          }, 3000)\n          setNewName('')\n          setNewNumber('')\n          setFilter('')\n        })\n      }\n    }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notification} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}